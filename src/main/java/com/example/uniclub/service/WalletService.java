package com.example.uniclub.service;

import com.example.uniclub.dto.response.WalletTransactionResponse;
import com.example.uniclub.entity.Club;
import com.example.uniclub.entity.Membership;
import com.example.uniclub.entity.Wallet;
import com.example.uniclub.entity.WalletTransaction;
import java.util.List;

public interface WalletService {

    // üîç L·∫•y v√≠ theo lo·∫°i
    Wallet getWalletByClubId(Long clubId);
    Wallet getWalletByMembershipId(Long membershipId);
    Wallet getWalletById(Long walletId);

    // üèóÔ∏è T·∫°o v√≠ n·∫øu ch∆∞a c√≥
    Wallet getOrCreateClubWallet(Club club);
    Wallet getOrCreateMembershipWallet(Membership membership);

    // üí∞ Thao t√°c tƒÉng / gi·∫£m ƒëi·ªÉm
    void increase(Wallet wallet, long points);
    void decrease(Wallet wallet, long points);

    // üí∏ Thao t√°c c√≥ log
    void addPoints(Wallet wallet, long points, String description);
    void reducePoints(Wallet wallet, long points, String description);
    void transferPoints(Wallet from, Wallet to, long points, String description);

    // üéì Nghi·ªáp v·ª• c·∫•p / th∆∞·ªüng ƒëi·ªÉm
    void logUniToClubTopup(Wallet clubWallet, long points, String reason);
    void logClubToMemberReward(Wallet memberWallet, long points, String reason);
//    Wallet getUniversityWallet();

    // üìú L·ªãch s·ª≠ giao d·ªãch
    List<WalletTransaction> getTransactionsByWallet(Long walletId);
    List<WalletTransactionResponse> getWalletTransactions(Long walletId);
    List<WalletTransactionResponse> getAllClubTopups();
    List<WalletTransactionResponse> getAllMemberRewards();

    void topupPointsFromUniversity(Wallet targetWallet, long points, String description);

}
