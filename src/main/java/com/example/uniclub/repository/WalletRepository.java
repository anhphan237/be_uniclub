package com.example.uniclub.repository;

import com.example.uniclub.entity.Club;
import com.example.uniclub.entity.Membership;
import com.example.uniclub.entity.Wallet;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import java.util.List;
import java.util.Optional;

public interface WalletRepository extends JpaRepository<Wallet, Long> {

    // üîç T√¨m v√≠ theo CLB (OneToOne)
    Optional<Wallet> findByClub(Club club);

    // üîç T√¨m v√≠ theo Membership (OneToOne)
    Optional<Wallet> findByMembership(Membership membership);

    // üîç T√¨m v√≠ theo ID CLB
    Optional<Wallet> findByClub_ClubId(Long clubId);

    // üîç T√¨m v√≠ theo ID Membership
    Optional<Wallet> findByMembership_MembershipId(Long membershipId);

    // üìä T·ªïng s·ªë ƒëi·ªÉm to√†n h·ªá th·ªëng
    @Query("SELECT COALESCE(SUM(w.balancePoints), 0) FROM Wallet w")
    long sumAllPoints();

    // üìä T·ªïng ƒëi·ªÉm c·ªßa m·ªôt CLB (t·ª´ v√≠ CLB)
    @Query("SELECT COALESCE(SUM(w.balancePoints), 0) FROM Wallet w WHERE w.club.clubId = :clubId")
    long sumPointsByClub(Long clubId);

    // üìà X·∫øp h·∫°ng CLB theo t·ªïng ƒëi·ªÉm
    @Query("""
        SELECT w.club.clubId, w.club.name, COALESCE(SUM(w.balancePoints), 0)
        FROM Wallet w
        WHERE w.club IS NOT NULL
        GROUP BY w.club.clubId, w.club.name
        ORDER BY SUM(w.balancePoints) DESC
    """)
    List<Object[]> findClubPointsRanking();
}
